plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.3'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {

    // ==========================
    // ✅ Spring Boot Starter
    // ==========================
    implementation 'org.springframework.boot:spring-boot-starter-security'   // Spring Security
    implementation 'org.springframework.boot:spring-boot-starter-web'        // Spring Web (MVC)
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'       // JDBC
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'   // JPA & Hibernate

    // ==========================
    // ✅ Lombok
    // ==========================
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    // ==========================
    // ✅ QueryDSL (Jakarta 버전) - Spring Boot 3.x 호환
    // ==========================
    implementation 'com.querydsl:querydsl-jpa:5.0.0'               // QueryDSL 핵심 라이브러리
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"  // QueryDSL APT (Annotation Processor)
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'  // Jakarta Persistence API
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'    // Jakarta Annotation API

    // ==========================
    // ✅ JWT 관련 라이브러리
    // ==========================
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // ==========================
    // ✅ Database Driver
    // ==========================
    runtimeOnly 'org.postgresql:postgresql'  // PostgreSQL Driver


    // ==========================
    // ✅ DevTools (개발 편의용)
    // ==========================
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // ==========================
    // ✅ Test 라이브러리
    // ==========================
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

}
tasks.withType(JavaCompile).configureEach {
    options.annotationProcessorGeneratedSourcesDirectory = file("$buildDir/generated/sources/annotationProcessor/java/main")
    options.compilerArgs << '-proc:full'
    options.compilerArgs << '-processor' << 'com.querydsl.apt.jpa.JPAAnnotationProcessor'
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', 'src/main/generated']
        }
    }
}
tasks.named('test') {
    useJUnitPlatform()
}
clean {
    delete file('src/main/generated')
}