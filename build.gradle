plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

dependencies {
    // ==========================
    // ✅ Spring Boot Starter
    // ==========================
    implementation 'org.springframework.boot:spring-boot-starter-security'      // Spring Security
    implementation 'org.springframework.boot:spring-boot-starter-web'           // Spring Web (MVC)
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'          // JDBC
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'      // JPA & Hibernate
    implementation 'org.springframework.boot:spring-boot-starter-websocket'     // WebSocket
    // ==========================
    // ✅ Test 라이브러리 (JUnit5 & Spring Boot Test)
    // ==========================
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    // ==========================
    // ✅ Lombok
    // ==========================
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    // ==========================
    // ✅ QueryDSL (jakarta 버전) - Spring Boot 3.x 호환
    // ==========================
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // ==========================
    // ✅ JWT 관련 라이브러리
    // ==========================
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // ==========================
    // ✅ Database Driver
    // ==========================
    runtimeOnly 'org.postgresql:postgresql'  // PostgreSQL Driver


    // ==========================
    // ✅ DevTools (개발 편의용)
    // ==========================
    developmentOnly 'org.springframework.boot:spring-boot-devtools'


}

//tasks.withType(JavaCompile).configureEach {
//    options.annotationProcessorGeneratedSourcesDirectory = file("$buildDir/generated/sources/annotationProcessor/java/main")
//}
//
//sourceSets {
//    main {
//        java {
//            srcDirs = ['src/main/java', 'build/generated/sources/annotationProcessor/java/main']
//        }
//    }
//}

tasks.named('test') {
    useJUnitPlatform()
}

clean {
    delete file('src/main/generated')  // QueryDSL QClass 위치
}
