server:
  port: 8080  # 서버 포트
  tomcat:
    threads:
      max: 64   # 최대 동시 요청을 64개까지 처리 (WebSocket + REST API)
    accept-count: 100  # 요청이 밀릴 때 최대 100개까지 대기 가능
    max-connections: 500  # 최대 동시 연결 수 (WebSocket 포함)
    connection-timeout: 30000  # 연결 타임아웃 (밀리초)
spring:

  application:
    name: morock-backend-server
  websocket:
    enabled: true
    broker:
      simple:
        prefix: "/topic"  # 메시지 브로커 경로 설정
    app-destination-prefixes: "/app"  # 클라이언트에서 서버로 메시지 보낼 경로
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: your-client-id
            client-secret: your-client-secret
            scope: profile, email
  data:
    redis:
      host: ${SPRING_REDIS_HOST}
      port: ${SPRING_REDIS_PORT}
      password: ${SPRING_REDIS_PASSWORD}


  datasource:
    url: jdbc:postgresql://morak-postgresql-server.postgres.database.azure.com:5432/morak_db
    username: morak
    password: new1234!@#
    driver-class-name: org.postgresql.Driver

    hikari:
      minimum-idle: 5
      maximum-pool-size: 20
      idle-timeout: 30000
      max-lifetime: 1800000
      connection-timeout: 30000
      auto-commit: true
      data-source-properties:
        logUnclosedConnections: true

  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

logging:
  level:
    org.springframework.jdbc.core: DEBUG
    org.springframework.jdbc.datasource: DEBUG


jwt:
  secret: V2tX/nIcSvKm/sNcycXWjvO9sIcnwWYbcq3Qsy+cm8juNk90oy43SVd4A8HvEBXKiX9BcTlIMcCIL4p+yGuTuw==
